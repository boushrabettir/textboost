# -*- coding: utf-8 -*-
"""foldercreation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12XQjxDn_urg0_d1bbnNKF1vc7gMDhhld
"""

# Possibility of getting a folder on their downloads,
# and look in that folder and there can be subsections like Downloads/food or
# Downloads/makeup or Downloads/clothing etc. And dependent on the context of the
# outputted pdf, the machine learning algorithm will place the pdf in their respected folder

import matplotlib.pyplot as plt
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.neighbors import KNeighborsClassifier
import tensorflow as tf
import os
import numpy as np
import math
from typing import List, Tuple


class KNearestNeighbors:
    """A class defining the functionality for KNN"""

    def __init__(self, k=1):
        self.k = k
        self.tdif = TfidfVectorizer()
        self.KNN = KNeighborsClassifier(self.k)

    def fit_list(self, X, y) -> None:
        self.X_train = X
        self.y_train = y
        self.KNN.fit(self.X_train, self.y_train)

    def transform_list(self, X) -> TfidfVectorizer:
        self.X_train = X
        return self.tdif.fit_transform(self.X_train)

    def transform(self, X):
        return self.tdif.transform(X)

    def predict_outcome(self, i) -> str:
      labels = {
          0: "business",
          1: "entertainment",
          2: "food",
          3: "graphics",
          4: "medical",
          5: "politics",
          6: "space",
          7: "sport",
            8: "technologie"
      }

      return labels[self.y_train[i]]

    def comparison(self, X_train, input):
        """Returns the index of the closest vector in X_train to the input vector"""
        transformed_input = self.transform([input])
        distances = self.tdif.transform(X_train).toarray()
        distances = np.linalg.norm(distances - transformed_input.toarray(), axis=1)
        closest_index = np.argmin(distances)
        return closest_index

def return_list_folders() -> List[str]:
  """Returns the list of folders"""
  folder_path = "/archive"
  folder_dir = os.listdir(folder_path)

  return folder_dir


def label_folders() -> dict:
  """Labels each folder with their number"""

  labeling_dict = dict()
  folder_dir = return_list_folders()

  for i, folder in enumerate(folder_dir):
    labeling_dict[folder] = i

  return labeling_dict


def merge_training_data() -> List[List[Tuple[str, int]]]:
  """Merges the data together"""
  labeling = label_folders()
  folder_path = "/archive"
  folder_dir = return_list_folders()
  all_rows = []

  for folder in folder_dir:
    curr_file = os.listdir(f"{folder_path}/{folder}")
    for document in curr_file:
      with open(f"{folder_path}/{folder}/{document}", "r", encoding="utf-8") as file:
        all_rows.append([file.read(), labeling[folder]])

  return all_rows

def split_x_y() -> dict:
  """Splits data into X_train and y_train"""

  X_train = []
  y_train = []
  training_data = merge_training_data()

  for i in training_data:
    X_train.append(i[0])
    y_train.append(i[1])


  return {"X_train": X_train, "y_train": y_train}



def main():
  knn = KNearestNeighbors(k=1)

  training_data = split_x_y()
  X_train = training_data["X_train"]
  y_train = training_data["y_train"]

  X_train_transformed = knn.transform_list(X_train)
  knn.fit_list(X_train_transformed, y_train)

  test = """Film row over Pirates 'cannibals'

Plans to portray Dominica's Carib Indians as cannibals in the sequel to hit film Pirates of the Caribbean have been criticised by the group's chief.

Carib Chief Charles Williams said talks with Disney's producers revealed there was "a strong element of cannibalism in the script which cannot be removed". The Caribbean island's government said Disney planned to film in Dominica. The Caribs have long denied their ancestors practised cannibalism. Disney was unavailable for comment. "Our ancestors stood up against early European conquerors and because they stood up...we were labelled savages and cannibals up to today," said Mr Williams.

"This cannot be perpetuated in movies." Shooting on the sequel is expected to begin in April, with hundreds of Dominicans applying to be extras in the movie.

About 3,000 Caribs live on the island of Dominica, which has a population of 70,000. Many Caribs were killed by disease and war during colonisation up to the 1600s. Mr Williams said he had received support from indigenous groups around the world in his efforts to have cannibalism references removed from the film. But he admitted there were some members of the Carib council who did not support the campaign. He said some did not "understand our history, they are weak and are not committed to the cause of the Carib people". The first Pirates of the Caribbean film took $305m (Â£162m) at the box office in the US alone. The cast and crew are to work on two sequels back-to-back, with the first to be released in 2006.
"""

  compare = knn.comparison(X_train_transformed, test)

  print(compare)




main()